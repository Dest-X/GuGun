#!/bin/bash

CONFIG_PATH="/etc/v2rayx"
CLIENT_DB="$CONFIG_PATH/clients.db"
FAKE_HOST_FILE="$CONFIG_PATH/fakehost.txt"
CONFIG_FILE="$CONFIG_PATH/config.json"
SERVICE_NAME="v2rayx"
LOG_FILE="/var/log/v2ray/access.log"

# === üßπ ‡∏•‡πâ‡∏≤‡∏á UUID ‡∏ó‡∏µ‡πà‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏ ===
clean_expired() {
  if [[ -f "$CLIENT_DB" ]]; then
    NOW=$(date +%s)
    TMP=$(mktemp)
    cat "$CLIENT_DB" | while IFS='|' read -r name uuid exp; do
      if [[ -z "$name" || -z "$uuid" || -z "$exp" ]]; then continue; fi
      exp_ts=$(date -d "$exp" +%s 2>/dev/null)
      if [[ $NOW -lt $exp_ts ]]; then
        echo "$name|$uuid|$exp" >> "$TMP"
      else
        echo "üóëÔ∏è ‡∏•‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏: $name ($uuid)"
        jq 'del(.inbounds[].settings.clients[] | select(.id=="'$uuid'"))' "$CONFIG_FILE" > "$CONFIG_FILE.tmp" && mv "$CONFIG_FILE.tmp" "$CONFIG_FILE"
      fi
    done
    mv "$TMP" "$CLIENT_DB"
    systemctl restart "$SERVICE_NAME"
  fi
}

# === ‚ûï ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ ===
add_user() {
  read -p "üë§ ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ: " name
  read -p "üìÖ ‡∏ß‡∏±‡∏ô‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏ (YYYY-MM-DD): " exp
  uuid=$(cat /proc/sys/kernel/random/uuid)
  echo "$name|$uuid|$exp" >> "$CLIENT_DB"
  jq '.inbounds[0].settings.clients += [{"id":"'$uuid'","level":0,"email":"'$name'"}]' "$CONFIG_FILE" > "$CONFIG_FILE.tmp" && mv "$CONFIG_FILE.tmp" "$CONFIG_FILE"
  systemctl restart "$SERVICE_NAME"
  echo "‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° $name ($uuid) ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à"
}

# === üîß ‡πÅ‡∏Å‡πâ FAKE HOST ===
edit_fakehost() {
  read -p "üåê ‡∏õ‡πâ‡∏≠‡∏ô FAKE HOST ‡πÉ‡∏´‡∏°‡πà: " host
  echo "$host" > "$FAKE_HOST_FILE"
  jq '(.inbounds[].streamSettings.tcpSettings.header.request.headers.Host[0]) = "'$host'"' "$CONFIG_FILE" > "$CONFIG_FILE.tmp" && mv "$CONFIG_FILE.tmp" "$CONFIG_FILE"
  systemctl restart "$SERVICE_NAME"
  echo "‚úÖ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô FAKE HOST ‡πÄ‡∏õ‡πá‡∏ô $host"
}

# === üîß ‡πÅ‡∏Å‡πâ‡∏û‡∏≠‡∏£‡πå‡∏ï‡∏ï‡∏≤‡∏°‡πÇ‡∏õ‡∏£‡πÇ‡∏ï‡∏Ñ‡∏≠‡∏• ===
edit_port() {
  mapfile -t protocols < <(jq -r '.inbounds[] | "" + .tag + " " + (.port|tostring)' "$CONFIG_FILE")
  echo "üì° ‡πÇ‡∏õ‡∏£‡πÇ‡∏ï‡∏Ñ‡∏≠‡∏•‡∏ó‡∏µ‡πà‡∏û‡∏ö:"
  for i in "${!protocols[@]}"; do
    tag_port=(${protocols[$i]})
    echo "$((i+1)). ${tag_port[0]} (port ${tag_port[1]})"
  done
  read -p "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡πÇ‡∏õ‡∏£‡πÇ‡∏ï‡∏Ñ‡∏≠‡∏•: " sel
  idx=$((sel-1))
  tag=${protocols[$idx]%% *}
  read -p "üîÅ ‡∏û‡∏≠‡∏£‡πå‡∏ï‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö $tag: " new_port
  jq '(.inbounds[] | select(.tag=="'$tag'") | .port) = '$new_port'' "$CONFIG_FILE" > "$CONFIG_FILE.tmp" && mv "$CONFIG_FILE.tmp" "$CONFIG_FILE"
  systemctl restart "$SERVICE_NAME"
  echo "‚úÖ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏û‡∏≠‡∏£‡πå‡∏ï $tag ‡πÄ‡∏õ‡πá‡∏ô $new_port"
}

# === üìä ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ===
show_usage() {
  printf "\n%-15s %-36s %-10s %-10s\n" "‡∏ä‡∏∑‡πà‡∏≠" "UUID" "‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î(MB)" "‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î(MB)"
  printf -- "%.0s-" {1..80}; echo
  for line in $(cat "$CLIENT_DB"); do
    name=$(echo $line | cut -d '|' -f1)
    uuid=$(echo $line | cut -d '|' -f2)
    rx=$(grep "$uuid" "$LOG_FILE" | grep accepted | awk '{s+=$11} END {print s/1024/1024}')
    tx=$(grep "$uuid" "$LOG_FILE" | grep accepted | awk '{s+=$13} END {print s/1024/1024}')
    rx=${rx:-0}; tx=${tx:-0}
    printf "%-15s %-36s %-10.2f %-10.2f\n" "$name" "$uuid" "$rx" "$tx"
  done
}

# === üîó ‡πÅ‡∏™‡∏î‡∏á‡∏•‡∏¥‡∏á‡∏Å‡πå vless ===
show_links() {
  IP=$(curl -s ifconfig.me)
  fake=$(cat "$FAKE_HOST_FILE")
  port=$(jq -r '.inbounds[0].port' "$CONFIG_FILE")
  for line in $(cat "$CLIENT_DB"); do
    name=$(echo $line | cut -d '|' -f1)
    uuid=$(echo $line | cut -d '|' -f2)
    echo "üîó $name: vless://$uuid@$IP:$port?type=tcp&security=none&headerType=http&host=$fake#$name"
  done
}

# === üß∞ ‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏•‡∏±‡∏Å ===
while true; do
  clean_expired
  echo "\n======================"
  echo "üì¶ V2RayX Pro Menu"
  echo "======================"
  echo "1. ‚ûï ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ"
  echo "2. üîß ‡πÅ‡∏Å‡πâ FAKE HOST"
  echo "3. üîÅ ‡πÅ‡∏Å‡πâ‡∏û‡∏≠‡∏£‡πå‡∏ï‡∏ï‡∏≤‡∏°‡πÇ‡∏õ‡∏£‡πÇ‡∏ï‡∏Ñ‡∏≠‡∏•"
  echo "4. üìä ‡∏î‡∏π‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ì‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô"
  echo "5. üîó ‡πÅ‡∏™‡∏î‡∏á‡∏•‡∏¥‡∏á‡∏Å‡πå VLESS"
  echo "6. ‚ñ∂Ô∏è ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£ V2RayX"
  echo "7. ‚èπÔ∏è ‡∏´‡∏¢‡∏∏‡∏î‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£ V2RayX"
  echo "8. üîÅ ‡∏£‡∏µ‡πÇ‡∏´‡∏•‡∏î V2RayX"
  echo "9. üö™ ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÄ‡∏°‡∏ô‡∏π"
  echo "======================"
  read -p "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á [1-9]: " cmd
  case $cmd in
    1) add_user;;
    2) edit_fakehost;;
    3) edit_port;;
    4) show_usage;;
    5) show_links;;
    6) systemctl start $SERVICE_NAME;;
    7) systemctl stop $SERVICE_NAME;;
    8) systemctl restart $SERVICE_NAME;;
    9) break;;
    *) echo "‚ùå ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á";;
  esac
  echo "\n‡∏Å‡∏î Enter ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏°‡∏ô‡∏π..."
  read
done
